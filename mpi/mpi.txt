#include <stdio.h>
#include <stdlib.h>
#include "mpi.h"

#define MASTER 0
#define N 10

void printMatrix1D(int *vector, int length, char *name) //prints the vector
{
	printf("%s (%dx%d): [", name, 1, length);
	for (int i = 0; i < length; i++)
		printf("%d ", vector[i]);
	printf("]\n");
}
main(int argc, char **argv)
{
	int	rank, size, tag = 0, from, to;
	int arry[N];
	
	MPI_Status status;
	MPI_Init(&argc, &argv);
	MPI_Comm_rank(MPI_COMM_WORLD, &rank);
	MPI_Comm_size(MPI_COMM_WORLD, &size);
	
	from = (rank - 1 + size) % size;
	to   = (rank + 1 + size) % size;

	int countRecv = N - rank + 1;
	
	printf("------------- %d/%d -------------\n", rank, size);
	if (MASTER == rank)
	{
		for (int i = 0; i < N; i++)
			arry[i] = i;
		printMatrix1D(arry, N, "arr");

		MPI_Send(arry, N, MPI_INT,
			to, tag, MPI_COMM_WORLD);

		countRecv = N - size + 1;
	}
	
	MPI_Recv(arry, countRecv, MPI_INT,
		from, tag, MPI_COMM_WORLD, &status);
	printMatrix1D(arry, countRecv, "arr income");

	if (MASTER != rank)
	{
		printf("Ilk sayi %d\n", arry[0]);
		MPI_Send(&arry[1], countRecv-1, MPI_INT,
			to, tag, MPI_COMM_WORLD);
	}
	printf("-----------------------------\n");

	MPI_Finalize();
}